Reine = 64 position possible 
Roi = 64 position possible
Fou = 64 position possible
Cavalier = 64 position possible
Tour = 64 position possible
Pion = 56 position possible

// 6 * 2 * 8 octet = 96 octets
unsigned long  Tab_pion_blanc =0b0000000000000000000000000000000000000000000000001111111100000000

// 64 * 4 = 256 octets
// 64 * 2 = 128 octets 
int echequier[8][8];


// position de la tour
unsigned long  Tab =0b0000000000000000000000000000000000000000000000000000000000000001 = 1
// coup possible quand tu es une tour
Tour[Tab] = tab_coup_possible= 0b0000000100000001000000010000000100000001000000010000000111111110;
// Coup demander par le joueur 
unsigned long  Tab_demande =0b1000000000000000000000000000000000000000000000000000000000000000 = 1

if(tab_coup_possible & tab_demande ==0)
	coup pas possible;

else 
	coup possible;

12 uint64_t
0 -> blanc
1 -> noir

0 -> pion
1 -> cavalier
2 -> fou 
3 -> tour
4 -> dame 
5 -> roi
uint64_t boards[2][6]

board[0][3]

00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
pos = 10000000

pos = 01000000
	// test 0 --> case occupÃ©
		board = boards[0][0] & boards[0][1] & [..] & boards[1][5]
		if (board & pos == 0)
			piece = 12
		else {
			// test 1 --> couleur ? 
			blanc = boards[0][0] & boards[0][1] & [..] & boards[0][5]
			if (blanc & pos !=0)
				couleur = 0;
			else 
				couleur = 1;
			// test 2 --> pion,cavalier,fou ?
			moitie = boards[couleur][0] & boards[couleur][1] & boards[couleur][2]
			if (moitie & pos != 0)
				half = 0
			else 
				half = 1 
			// test 3 --> (0-3) , (1-4) , (2-5)
			if (boards[couleur][0+half*3] & pos != 0)
				piece = couleur*6 + half*3 + 0
	        else if (boards[couleur][1+half*3] & pos != 0)
		 		piece = couleur*6 + half*3 + 1
			else
				piece = couleur*6 + half*3 + 2
		}
		afficherChar(piece);

for (i=0; i<64;i++){
	pos = pow(2,i)
}
pos = 1
for (i =0; i<64 ; i++){
	[Traitement]
	pos = pos <<1;
}
Exemple : 

   +----+----+----+----+----+----+----+----+
 8 | 56 | 57 | 58 | 59 | 60 | 61 | 62 | 63 |
   +----+----+----+----+----+----+----+----+
 7 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 |
   +----+----+----+----+----+----+----+----+
 6 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 |
   +----+----+----+----+----+----+----+----+
 5 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 |
   +----+----+----+----+----+----+----+----+
 4 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 |
   +----+----+----+----+----+----+----+----+
 3 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 |
   +----+----+----+----+----+----+----+----+
 2 | 8  | 9  | 10 | 11 | 12 | 13 | 14 | 15 |
   +----+----+----+----+----+----+----+----+
 1 | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  |
   +----+----+----+----+----+----+----+----+
     a    b    c    d    e    f    g    h  
